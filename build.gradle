plugins {
    id 'groovy'
    id 'java'
    id 'pl.allegro.tech.build.axion-release' version '1.7.1'
    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0'
}

group 'org.rundeck.plugins'

ext.publishName = "Multiline Regex Datacapture Filter ${project.version}"
ext.publishDescription = project.description ?: 'Multiline Regex Datacapture Filter Plugin'
ext.githubSlug = 'rundeck-plugins/multiline-regex-datacapture-filter-plugin'
ext.developers = [
        [id: 'gschueler', name: 'Greg Schueler', email: 'greg@rundeck.com']
]

ext.rundeckVersion='5.14.0-rc1-20250722'
defaultTasks 'clean','build'
ext.rundeckPluginVersion= '1.2'
group 'org.rundeck.plugins'

scmVersion {
    ignoreUncommittedChanges = true
    tag {
        prefix = ''
        versionSeparator = ''
        def origDeserialize=deserialize
        //apend .0 to satisfy semver if the tag version is only X.Y
        deserialize = { config, position, tagName ->
            def orig = origDeserialize(config, position, tagName)
            if (orig.split('\\.').length < 3) {
                orig += ".0"
            }
            orig
        }
    }
}

project.version = scmVersion.version

/**
 * Set this to a comma-separated list of full classnames of your implemented Rundeck
 * plugins.
 */
ext.pluginClassNames='com.rundeck.plugin.DataKeyFilterMultiLines'




repositories {
    mavenCentral()
}

configurations{
    //declare custom pluginLibs configuration to include only libs for this plugin
    pluginLibs

    //declare compile to extend from pluginLibs so it inherits the dependencies
    compile{
        extendsFrom pluginLibs
    }
}


dependencies {
    implementation 'org.codehaus.groovy:groovy-all:2.3.11'
    testImplementation group: 'junit', name: 'junit', version: '4.12'

    implementation group: 'org.rundeck', name: 'rundeck-core', version: rundeckVersion
    testImplementation "org.spockframework:spock-core:0.7-groovy-2.0"

}



// task to copy plugin libs to output/lib dir
task copyToLib(type: Copy) {
    into "$buildDir/output/lib"
    from configurations.pluginLibs
}


jar {
    from "$buildDir/output"
    manifest {
        def libList = configurations.pluginLibs.collect{'lib/'+it.name}.join(' ')
        attributes 'Rundeck-Plugin-Classnames': pluginClassNames
        attributes 'Rundeck-Plugin-File-Version': version
        attributes 'Rundeck-Plugin-Version': rundeckPluginVersion, 'Rundeck-Plugin-Archive': 'true'
        attributes 'Rundeck-Plugin-Libs': "${libList}"
        attributes 'Main-Class': "io.github.valfadeev.rundeck.plugin.vault.VaultStoragePlugin"
        attributes 'Class-Path': "${libList} lib/rundeck-core-${rundeckVersion}.jar"
    }
}
//set jar task to depend on copyToLib
jar.dependsOn(copyToLib)

nexusPublishing {
    packageGroup = 'org.rundeck.plugins'
    repositories {
        sonatype {
            nexusUrl.set(uri("https://ossrh-staging-api.central.sonatype.com/service/local/"))
            snapshotRepositoryUrl.set(uri("https://central.sonatype.com/repository/maven-snapshots/"))
        }
    }
}

apply from: "${rootDir}/gradle/publishing.gradle"
